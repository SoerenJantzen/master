buildscript {
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath('org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE')
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.docker'

group = 'sjantzen'

jar {
	baseName = 'backend'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-devtools')
	// security
	compile('org.springframework.boot:spring-boot-starter-security')

	//compile('org.springframework:spring-jdbc')
	compile group: 'org.webjars', name: 'bootstrap', version: '3.2.0'

	// JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Use MySQL Connector-J
	compile 'mysql:mysql-connector-java'

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

docker {
	name "${project.group}/${jar.baseName}"
	println 'Name: ' + name
	println 'ArchivePath: ' + jar.archivePath
	println 'ArchiveName: ' + jar.archiveName
	//files jar.archivePath
	//buildArgs(['JAR_FILE': "${jar.archiveName}"])
}